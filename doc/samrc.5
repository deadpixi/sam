.Dd $Mdocdate$
.Dt SAMRC 5
.Os
.Sh NAME
.Nm samrc
.Nd configure samterm
.Sh SYNOPSIS
.Pa \[ti]/.samrc
.Sh DESCRIPTION
A
.Nm
file in the user's home directory can be used to configure the downloaded
portion of the
.Xr sam 1
editor
.Pq "that is, samterm" "."
This file,
if it exists,
is read at startup.
.Pp
Each line begins with a configuration directive and some number of arguments.
Lines whose first printing character is a
.Dq "#"
are considered comments and are ignored.
The following configuration directives are supported:
.Bl -tag -width Ds
.It bind
Bind a key sequence to a command or a raw character.
The forms are:
.Bd -literal -offset indent
bind M K command C A
bind M K command C
bind M K raw C
.Ed
.Pp
Where
.Em M
is a string describing a set of modifier keys
.Po
see
.Sx "Modifier Keys"
below
.Pc ","
.Em K
is the name of a keyboard symbol suitable for passing to
.Xr XStringToKeysym 3 ","
.Em C
is either a command name
.Po
for command bindings;
see
.Sx "Command Names"
below
.Pc
or a literal or hexadecimal specification of a character,
and
.Em A
is an arbitrary string to use as an argument to a bound command.
.Pp
Note that keyboard symbol names are implementation-defined and often case-sensitive,
and that not all commands will make use of arguments.
.It unbind
Remove all bindings associated with a key sequence.
The form is:
.Bd -literal -offset indent
unbind M K
.Ed
.Pp
where
.Em M
is a string describing a set of modifier keys and
.Em K
is the name of a keyboard symbol,
as for
.Dq bind
above.
The key sequence may be subsequently rebound.
.It chord
Bind a mouse chord to a command.
The form is:
.Bd -literal -offset indent
chord S1 S2 C T
.Ed
.Pp
where
.Em S1
is a string describing the initial state of the mouse buttons
.Po
see
.Sx "Mouse Button States"
below
.Pc ","
.Em S2
is a string describing the following state of the mouse buttons,
.Em C
is a command name,
and
.Em T
is a target
.Po
see
.Sx "Targets"
below
.Pc "."
.It unchord
Remove all bindings for a given mouse chord.
The form is:
.Bd -literal -offset indent
unchord S1 S2
.Ed
.Pp
where
.Em S1
and
.Em S2
are strings describing the initial and following mouse button states.
The chord may be subsequently rebound.
.It foreground
Names the color used to draw text.
It is of the form:
.Bd -literal -offset indent
foreground C
.Ed
.Pp
where
.Em C
is a color name suitable for passing to
.Xr XAllocNamedColor 3 "."
.It background
Names the color used to draw the background of files being edited.
It is of the form:
.Bd -literal -offset indent
background C
.Ed
.Pp
where
.Em C
is a colon-separated list of color names as for the foreground directive.
If more than one color is specified,
files will cycle through these background colors.
.It border
Names the color used to draw file borders.
It is of the form:
.Bd -literal -offset indent
border C
.Ed
.Pp
where
.Em C
is a color specification as for foreground.
.It font
Specifies the font used to draw text.
It is of the form:
.Bd -literal -offset indent
font F
.Ed
.Pp
where
.Em F
is an
.Xr fc-match 1 Ns -compatible
font pattern.
.It tabs
Specifies the width of tab characters in multiples of the width of the
.Sq 0
character.
It is of the form:
.Bd -literal -offset indent
tabs N
.Ed
.Pp
where
.Em N
is an integer between 1 and 12.
.It expandtabs
Determines if tabs should be automatically expanded into spaces.
It is of the form:
.Bd -literal -offset indent
expandtabs B
.Ed
.Pp
where
.Em B
is the string
.Dq true
or
.Dq false "."
If
.Dq true ","
then tabs will be automatically expanded.
.It autoindent
Determines whether a line following a non-empty indented line is automatically indented.
It is of the form:
.Bd -literal -offset indent
autoindent B
.Ed
.Pp
where
.Em B
is the string
.Dq true
or
.Dq false "."
If
.Dq true ","
then a new line after a non-empty indented line is automatically indented.
.It snarfselection
Indicates which X selection should be exchanged with
.Nm sam
upon execution of the
.Em exchange
command
.Pq "either via the menu item or key binding" "."
The forms are:
.Bd -literal -offset indent
snarfselection primary
snarfselection secondary
snarfselection clipboard
.Ed
.It followfocus
Determines window focus mode.
It is of the form:
.Bd -literal -offset indent
followfocus B
.Ed
.Pp
where
.Em B
is the string
.Dq true
or
.Dq false "."
If
.Dq true ","
then the window focus mode is set to follow the mouse pointer.
In this mode typing is directed to the window currently underneath the mouse pointer.
.El
.Ss Defaults
The default keybindings and mouse chords are those documented in
.Xr sam 1 "."
The default foreground and border color is black,
and the default background color is white.
Tabs are not expanded by default,
and tabstops are set at every eight characters.
The default X selection is
.Do primary
.Dc "."
The default window focus mode is
.Dq "Click to focus" "."
Typing is directed to the window which was last clicked.
.Ss "Modifier Keys"
The
.Em bind
directive expects a string describing the state of modifier keys.
This string consists of one or more of
.Dq "*"
meaning any set of modifiers,
.Dq "a"
meaning Alt
.Pq Mod1 ","
.Dq "c"
meaning Control, or
.Dq "s"
meaning Shift.
.Pp
For example,
to bind the
.Dq exchange
command to
.Em Control-Shift-E ","
the following directive could be used:
.Bd -literal -offset indent
bind CS e command exchange
.Ed
.Ss "Command Names"
The following names can be used for commands:
.TS
c | c | c
- | - | -
l | l | r.
Name	Meaning	Default Binding
escape	Highlight recent text	Escape
scrolldown	Scroll down by page	 PgDn, Down/Right
scrollup	Scroll up by page	PgUp, Up/Left
scrolldownline	Scroll down by line	None
scrollupline	Scroll up by line	None
jump	Jump to/from command window	Control-K
charright	Move dot one to the right	Control-D
charleft	Move dot one to the left	Control-S
lineup	Move dot up	Control-E
linedown	Move dot down	Control-X
delbol	Delete to BOL	Control-U
delword	Delete prev. word	Control-W
delbs	Delete prev. character	BackSpace
del	Delete next character	Delete
cut	Cut selection	Control-Y
snarf	Snarf selection	Control-C
paste	Paste snarf buffer	Control-V
exchange	Exchange snarf buffer	Control-Q
eol	Move to end of line	None
bol	Move to beginning of line	None
tab	Insert a tab	Tab
send	Append to command window	None
write	Write the current file to disk	None
look	Find next literal string	None
search	Find next regex	None
.TE
.Pp
Additionally,
the command name
.Dq none
means that the given binding should perform no action
.Pq "not even insert a character" ","
and the command name
.Dq default
means that the given binding should perform whatever action was previously defined for it.
.Pp
For the
.Em send
command,
the text to send is specified in the argument of the binding.
For example, to bind
.Em Control-Z
to undo the last 10 changes, the following line binding could be used:
.Bd -literal -offset indent
bind C z command send u10
.Ed
.Pp
Note that the
.Dq send
command is analogous to the
.Dq send
menu item:
the argument text is simply appended to the text in the command window.
Thus,
one should exercise caution if partially-completed commands exist in the command window.
.Ss "Mouse Button States"
Chords are described using two states:
a beginning state and an end state.
When the mouse buttons are in the beginning state and then switch to being in the end state,
the chord is activated.
.Pp
States are described using button numbers between 1 and 5,
corresponding to the buttons on the mouse numbered from the left
.Pq "though this is up to your windowing system and may vary" "."
For example,
the string
.Bd -literal -offset indent
12
.Ed
.Pp
means
.Dq "buttons 1 and 2 are pressed" "."
The special string
.Dq "n"
means
.Dq "no buttons are pressed" "."
Thus to bind the
.Em cut
command to the chord
.Dq "hold button one, then click button two"
the following configuration directive can be used:
.Bd -literal -offset indent
chord 1 12 cut current
.Ed
.Ss "Targets"
Mouse chords can send their commands to either the current file
.Pq "i.e. the one receiving typed input"
by specifying
.Dq current
as the target;
or to the file under the mouse pointer by specifying
.Dq mouse
as the target.
.Ss Ordering considerations
Commands are executed in the order they are present in the
.Nm
file.
Later commands will override earlier commands,
meaning that in the case of duplicate binding or chord definitions,
the last one wins.
.Pp
Note that this means that bindings defined with the
.Dq any
modifier set should be defined earlier in the file than those binding the same key with modifiers,
since otherwise the
.Dq any
binding will always win.
.Sh EXAMPLES
An example
.Nm
file is provided in the sam source distribution as
.Pa doc/samrc "."
.Sh SEE ALSO
.Xr sam 1
